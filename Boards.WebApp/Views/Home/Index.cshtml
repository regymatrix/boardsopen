@model Boards.WebApp.ViewModels.DefaultViewModel
@{
    ViewData["Title"] = "Bem vindo";
    Layout = "../Shared/_LayoutHome.cshtml";
}
<div id="app">
    <transition name="fade">
        <div v-if="show">
            <br />
            <input type="text" style="display:none">
            <input type="password" style="display:none">
            <input type="email" style="display:none">
            @if (ViewData["SucessoInicioReset"].ToString() == "True")
            {
                <div v-show="!requererSenha && !aindaNaoTemSenha" class="text-center text-success">
                    <strong>Sucesso!</strong> Agora basta inserir seu e-mail e digitar sua nova senha.
                    <br />
                    <br />
                </div>
            }

            <transition name="fade">
                <input class="form-control" v-show="requererNome" v-model="nome" v-on:enter="login()" placeholder="Digite aqui seu nome" type="text" />
            </transition>
            <transition name="fade">
                <div v-show="aindaNaoTemSenha" class="text-center">
                    <div v-show="jaTemNome">
                        <h5><ion-icon name="lock-closed" size="large"></ion-icon></h5>
                        <h5>Ei, você ainda não criou uma senha!</h5>
                        <h4>Que tal fazer isso agora?</h4>
                    </div>
                    <input class="form-control" v-model="novaSenha" v-on:enter="login()" placeholder="Digite aqui sua senha" type="password" />
                </div>
            </transition>
            <input class="form-control" v-model="email" v-show="!aindaNaoTemSenha" v-lowercase v-on:enter="login()" placeholder="Digite aqui seu e-mail" type="email" />
            <transition name="fade">
                <div v-show="requererSenha" class="text-center">
                    <input class="form-control" v-model="senha" v-on:enter="login()" placeholder="Digite aqui sua senha" type="password" />
                    <br />
                    <a href="#" v-on:click="resetarSenha()" class="text-center">Esqueci minha senha</a>
                </div>
            </transition>
            <div class="space-75"></div>
            <div class="text-center">
                <button v-on:click="login()" href="#" class="button-login">
                    <ion-icon name="flash" size="large"></ion-icon>
                </button>
            </div>


        </div>
    </transition>
</div>



<script>
    var home = new Vue({
        el: "#app",
        data: {
            show: false,
            email: "",
            nome: "",
            senha: "",
            novaSenha: "",
            jaTemNome: false,
            aindaNaoTemSenha: false,
            requererNome: false,
            requererSenha: false,
            idNovoUsuario: 0
        },
        methods: {
            resetarSenha() {
                showLoader();
                axios.post("/api/auth/ResetPassword?email=" + this.email).then(response => {
                    if (response.data == "success") {
                        Swal.fire({
                            icon: 'success',
                            title: 'Sucesso',
                            html: 'Clique no link enviado para seu e-mail para resetar sua senha.'
                        });
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops',
                            html: 'Por favor, tente novamente mais tarde.'
                        });
                    }
                    hideLoader();
                });
            },
            mostarCampos(data) {
                this.requererNome = data.requerNome;
                this.aindaNaoTemSenha = data.aindaNaoTemSenha;
                this.requererSenha = data.requerSenha;
                this.idNovoUsuario = data.idUsuario;
                if (this.requererNome == true) {
                    this.jaTemNome = false;
                }
                else {
                    this.jaTemNome = true;
                }

            },
            validarCampos() {
                if (this.email == "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Ei!',
                        html: 'Por favor preencha seu e-mail.'
                    });
                    return false;
                }
                return true;
            },
            login() {
                if (this.validarCampos() == false) {
                    return;
                }
                this.validarCampos();
                if (this.requererNome == true) {
                    this.loginNovoUsuario();
                    return;
                }
                if (this.novaSenha != "") {
                    this.loginNovoUsuario();
                    return;
                }
                if (this.senha == "" && this.novaSenha == "") {
                    showLoader();
                    axios.post("/api/auth/accountInfo?email=" + this.email).then(response => {
                        console.log(response.data);

                        this.mostarCampos(response.data);
                        hideLoader();
                    });
                }
                else {
                    showLoader();
                    axios.post("/api/auth/login?email=" + this.email + "&senha=" + this.senha).then(response => {
                        hideLoader();
                        if (response.data == "success") {
                            location.href = "/Home/Dashboard"
                        }
                        else {
                            this.mostarCampos(response.data);
                        }
                    }).catch(error => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            html: error.response.data
                        });
                        hideLoader();
                    });
                }
            },
            loginNovoUsuario() {
                if (this.novaSenha != "") {
                    if (this.requererNome == true && this.nome == "") {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            html: 'Por favor preencha todos os campos!'
                        });
                    }
                    showLoader();
                    axios.post("/api/auth/loginNovoUsuario?idUsuario=" + this.idNovoUsuario
                        + "&emailUsuario=" + this.email
                        + "&nomeUsuario=" + this.nome
                        + "&senhaUsuario=" + this.novaSenha).then(response => {
                            hideLoader();
                            location.href = "/Home/Dashboard"
                        }).catch(error => {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                html: error.response.data
                            });
                            hideLoader();
                        });
                }
                else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        html: 'Por favor preencha todos os campos!'
                    });
                }

            },
            captureEnter(key) {
                if (key == "Enter") {
                    this.login();
                }
            }
        },
        mounted: function () {
            this.show = true;
            window.addEventListener("keypress", e => {
                this.captureEnter(e.code);
            });
            Vue.directive("lowercase", {
                update: function (el) {
                    el.value = el.value.toLowerCase()
                }
            })
        }
    });
</script>